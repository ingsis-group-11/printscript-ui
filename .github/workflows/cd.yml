name: Build and Push Docker Image for React Frontend

on:
  push:
    branches:
      - master
      - dev

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Checkout del código
      - name: Checkout Code
        uses: actions/checkout@v3

      # Paso 2: Configurar Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # O la versión de Node.js que estés usando
          cache: 'npm'

      # Paso 3: Establecer las variables de entorno VITE_AUTH0_DOMAIN y VITE_AUTH0_CLIENT_ID
      - name: Set environment variables
        run: |
          echo "VITE_AUTH0_DOMAIN=${{ secrets.VITE_AUTH0_DOMAIN }}" >> $GITHUB_ENV
          echo "VITE_AUTH0_CLIENT_ID=${{ secrets.AUTH_CLIENT_ID }}" >> $GITHUB_ENV

      # Paso 4: Iniciar sesión en Docker Hub o GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # Paso 5: Establecer el tag de la imagen según la rama
      - name: Set Docker Image Tag
        id: get-tag
        run: |
          if [ "${{ github.ref }}" == "refs/heads/master" ]; then
            echo "TAG=latest" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" == "refs/heads/dev" ]; then
            echo "TAG=dev" >> $GITHUB_ENV
          else
            echo "TAG=other" >> $GITHUB_ENV
          fi

      # Paso 6: Construir y publicar la imagen Docker
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ env.TAG }}
          build-args: |
            VITE_AUTH0_DOMAIN=${{ secrets.VITE_AUTH0_DOMAIN }}
            VITE_AUTH0_CLIENT_ID=${{ secrets.AUTH_CLIENT_ID }}
          secrets: |
            gpr_user=${{ github.actor }}
            gpr_token=${{ secrets.DOCKER_TOKEN }}
